version: '3'

services: 
  postgresdb:
    build: ./postgres
    container_name: postgresdb
    restart: always
    tty: true
    ports:
      - 5432:5432
    volumes:
      - ${PWD}/.env:/app/.env      
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=budgetdb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}        
    networks:
      - budget_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "16543:80"
    volumes:
      - ${PWD}/.env:/app/.env 
    depends_on:
      - postgresdb
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - budget_network

  app_budget:
    build: .
    container_name: app_budget
    restart: always
    tty: true
    ports: 
      - 3000:3000
    volumes:
      - ${PWD}/.env:/app/.env      
      - .:/home/node/app
    depends_on:
      - postgresdb
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - JWT_SECRET=${DATABASE_URL}
      - ENCRYPT_JWT_SECRET${ENCRYPT_JWT_SECRET}
      - JWT_EXPIRATION${JWT_EXPIRATION}
    command: sh -c "npm install && npx prisma migrate deploy && npx prisma generate --schema=./prisma/schema.prisma && npm run build && psql -h ${POSTGRES_HOST} -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE} -w ${POSTGRES_PASSWORD}  < ./postgres/scripts/initial-charge.sql && npm run start:dev"
    networks:
      - budget_network

networks: 
  budget_network:
    driver: bridge